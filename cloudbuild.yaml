steps:
  - id: 'controller-network'
    name: 'hashicorp/terraform:1.3.7'
    entrypoint: 'sh'
    args: ['./run-terraform.sh', 'controller-network']
    env:
      - 'TF_VAR_controller_name=mattk-controller'
      - 'TF_VAR_image=aviatrix-public/avx-controller-gcp-2022-10-31'
  - id: 'controller-instance'
    name: 'hashicorp/terraform:1.3.7'
    entrypoint: 'sh'
    args:
      - -c
      - |
          cd controller-instance
          echo "[CONTROLLER-INSTANCE]: Running Terraform Init"
          terraform init -compact-warnings -backend-config="bucket=$(echo $$TF_VAR_state_bucket)" -backend-config="prefix=avx/instance"
          echo "[CONTROLLER-INSTANCE]: Running Terraform apply."
          terraform apply -compact-warnings -auto-approve -lock=false
    env:
      - 'TF_VAR_controller_name=mattk-controller'
      - 'TF_VAR_image=aviatrix-public/avx-controller-gcp-2022-10-31'
    secretEnv:
      - 'TF_VAR_admin_cidrs'
  - id: 'controller-firewall'
    name: 'hashicorp/terraform:1.3.7'
    entrypoint: 'sh'
    args:
      - -c
      - |
          cd controller-firewall
          echo "[CONTROLLER-FIREWALL]: Adding Cloud Build Worker IP to firewall."
          echo "[CONTROLLER-FIREWALL]: Running Terraform Init"
          terraform init -compact-warnings -backend-config="bucket=$(echo $$TF_VAR_state_bucket)" -backend-config="prefix=avx/firewall"
          echo "[CONTROLLER-FIREWALL]: Running Terraform apply."
          terraform apply -compact-warnings -auto-approve -lock=false
          echo "[CONTROLLER-FIREWALL]: Added worker IP to firewall."
  - id: 'controller-init-py'
    name: 'hashicorp/terraform:1.3.7'
    entrypoint: 'sh'
    args:
      - -c
      - |
          echo "[CONTROLLER-INIT-PY]: Set environment variables."
          export AVIATRIX_PRIVATE_IP=$(cat /workspace/controller_private_ip)
          export AVIATRIX_CONTROLLER_IP=$(cat /workspace/controller_public_ip)
          echo "[CONTROLLER-INIT-PY]: Installing Python3 and requirements."
          apk -q add --no-cache python3 py3-requests
          cd controller-init-py
          echo "[CONTROLLER-INIT-PY]: Running init script."
          python3 init.py
    secretEnv:
    - 'AVIATRIX_CUSTOMER_ID'
    - 'AVIATRIX_CONTROLLER_ADMIN_EMAIL'
  - id: 'controller-init-tf'
    name: 'hashicorp/terraform:1.3.7'
    entrypoint: 'sh'
    args:
      - -c
      - |
          cd controller-init-tf
          export AVIATRIX_CONTROLLER_IP=$(cat /workspace/controller_public_ip)
          echo "[CONTROLLER-INIT-TF]: Running Terraform Init."
          terraform init -compact-warnings -backend-config="bucket=$(echo $$TF_VAR_state_bucket)" -backend-config="prefix=avx/init-tf"
          echo "[CONTROLLER-INIT-TF]: Running Terraform Apply."
          terraform apply -compact-warnings -auto-approve -lock=false
  - id: 'controller-firewall-destroy'
    name: 'hashicorp/terraform:1.3.7'
    entrypoint: 'sh'
    args:
      - -c
      - |
          cd controller-firewall
          echo "[CONTROLLER-FIREWALL]: Removing Cloud Build Worker IP from firewall."
          echo "[CONTROLLER-FIREWALL]: Running Terraform Init"
          terraform init -compact-warnings -backend-config="bucket=$(echo $$TF_VAR_state_bucket)" -backend-config="prefix=avx/firewall"
          echo "[CONTROLLER-FIREWALL]: Running Terraform destory."
          terraform destroy -compact-warnings -auto-approve -lock=false
          echo "[CONTROLLER-FIREWALL]: Removed worker IP from firewall."
options:
  env:
    - 'TF_VAR_project=$PROJECT_ID'
    - 'AVIATRIX_USERNAME=admin'
  secretEnv:
    - 'TF_VAR_state_bucket'
    - 'TF_VAR_subnetwork_self_link'
    - 'AVIATRIX_PASSWORD'
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/avx-admin-email/versions/latest
      env: 'AVIATRIX_CONTROLLER_ADMIN_EMAIL'
    - versionName: projects/$PROJECT_ID/secrets/avx-admin-password/versions/latest
      env: 'AVIATRIX_PASSWORD'
    - versionName: projects/$PROJECT_ID/secrets/avx-customer-id/versions/latest
      env: 'AVIATRIX_CUSTOMER_ID'
    - versionName: projects/$PROJECT_ID/secrets/avx-admin-cidrs/versions/latest
      env: 'TF_VAR_admin_cidrs'
    - versionName: projects/$PROJECT_ID/secrets/avx-state-bucket/versions/latest
      env: 'TF_VAR_state_bucket'
    - versionName: projects/$PROJECT_ID/secrets/avx-subnetwork/versions/latest
      env: 'TF_VAR_subnetwork_self_link'